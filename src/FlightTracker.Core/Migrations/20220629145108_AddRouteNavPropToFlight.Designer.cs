// <auto-generated />
using System;
using FlightTracker.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FlightTracker.Migrations
{
    [DbContext(typeof(FlightTrackerDbContext))]
    [Migration("20220629145108_AddRouteNavPropToFlight")]
    partial class AddRouteNavPropToFlight
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("FlightTracker.Domain.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AirlineId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("RouteId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RouteId");

                    b.ToTable("Flight");
                });

            modelBuilder.Entity("FlightTracker.Domain.Route", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("DestinationCityId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OriginCityId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Route");
                });

            modelBuilder.Entity("FlightTracker.Domain.Subscription", b =>
                {
                    b.Property<int>("AgencyId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OriginCityId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DestinationCityId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AgencyId", "OriginCityId", "DestinationCityId");

                    b.ToTable("Subscription");
                });

            modelBuilder.Entity("FlightTracker.Domain.Flight", b =>
                {
                    b.HasOne("FlightTracker.Domain.Route", "Route")
                        .WithMany()
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Route");
                });
#pragma warning restore 612, 618
        }
    }
}
